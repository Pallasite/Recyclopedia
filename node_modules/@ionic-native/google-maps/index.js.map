{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/google-maps/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, CordovaInstance, CordovaCheck, Plugin, InstanceProperty, InstanceCheck, checkAvailability } from '@ionic-native/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/fromEvent';\r\n\r\ndeclare var plugin: any;\r\n\r\n/**\r\n * @hidden\r\n * You can listen to these events where appropriate\r\n */\r\nexport const GoogleMapsEvent = {\r\n  MAP_CLICK: 'click',\r\n  MAP_LONG_CLICK: 'long_click',\r\n  MY_LOCATION_CHANGE: 'my_location_change',\r\n  MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',\r\n  INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',\r\n  INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',\r\n  CAMERA_CHANGE: 'camera_change',\r\n  CAMERA_IDLE: 'camera_idle',\r\n  MAP_READY: 'map_ready',\r\n  MAP_LOADED: 'map_loaded',\r\n  MAP_WILL_MOVE: 'will_move',\r\n  MAP_CLOSE: 'map_close',\r\n  MARKER_CLICK: 'click',\r\n  OVERLAY_CLICK: 'overlay_click',\r\n  INFO_CLICK: 'info_click',\r\n  MARKER_DRAG: 'drag',\r\n  MARKER_DRAG_START: 'drag_start',\r\n  MARKER_DRAG_END: 'drag_end'\r\n};\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport const GoogleMapsAnimation = {\r\n  BOUNCE: 'BOUNCE',\r\n  DROP: 'DROP'\r\n};\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport const GoogleMapsMapTypeId = {\r\n    HYBRID: 'MAP_TYPE_HYBRID',\r\n    NONE: 'MAP_TYPE_NONE',\r\n    NORMAL: 'MAP_TYPE_NORMAL',\r\n    ROADMAP: 'MAP_TYPE_ROADMAP',\r\n    SATELLITE: 'MAP_TYPE_SATELLITE',\r\n    TERAIN: 'MAP_TYPE_TERRAIN'\r\n};\r\n\r\n/**\r\n * @hidden\r\n */\r\n@Plugin({\r\n  pluginName: 'GoogleMaps',\r\n  plugin: 'cordova-plugin-googlemaps'\r\n})\r\nexport class GoogleMap {\r\n  _objectInstance: any;\r\n\r\n  constructor(element: string | HTMLElement, options?: any) {\r\n    if (checkAvailability('plugin.google.maps.Map', null, 'GoogleMaps') === true) {\r\n      if (typeof element === 'string') {\r\n        element = document.getElementById(<string>element);\r\n      }\r\n      this._objectInstance = plugin.google.maps.Map.getMap(element, options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  @InstanceCheck()\r\n  addEventListener(eventName: string): Observable<any> {\r\n    return Observable.fromEvent(this._objectInstance, eventName);\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener that works once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  @InstanceCheck()\r\n  addListenerOnce(eventName: string): Promise<any> {\r\n    return new Promise<any>(resolve => this._objectInstance.addListenerOnce(eventName, resolve));\r\n  }\r\n\r\n  /**\r\n   * Gets a value\r\n   * @param key\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  get(key: string): any { return; }\r\n\r\n  /**\r\n   * Sets a value\r\n   * @param key\r\n   * @param value\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  set(key: string, value: any): void { }\r\n\r\n  /**\r\n   * Listen to a map event.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  @InstanceCheck({ observable: true })\r\n  on(eventName: string): Observable<any> {\r\n    return Observable.fromEvent(this._objectInstance, eventName);\r\n  }\r\n\r\n  /**\r\n   * Listen to a map event only once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  @InstanceCheck()\r\n  one(eventName: string): Promise<any> {\r\n    return new Promise<any>(resolve => this._objectInstance.one(eventName, resolve));\r\n  }\r\n\r\n  /**\r\n   * Clears all stored values\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  empty(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setDebuggable(isDebuggable: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setClickable(isClickable: boolean): void { }\r\n\r\n  /**\r\n   * Get the position of the camera.\r\n   *\r\n   * @returns {Promise<CameraPosition>}\r\n   */\r\n  @CordovaInstance()\r\n  getCameraPosition(): Promise<CameraPosition> { return; }\r\n\r\n  /**\r\n   * Get the location of the user.\r\n   *\r\n   * @returns {Promise<MyLocation>}\r\n   */\r\n  @CordovaInstance()\r\n  getMyLocation(options?: MyLocationOptions): Promise<MyLocation> { return; }\r\n\r\n  /**\r\n   * Get the visible region.\r\n   *\r\n   * @returns {Promise<VisibleRegion>}\r\n   */\r\n  @CordovaInstance()\r\n  getVisibleRegion(): Promise<VisibleRegion> { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  showDialog(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  closeDialog(): void { }\r\n\r\n  @CordovaInstance()\r\n  getLicenseInfo(): Promise<string> { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setCenter(latLng: LatLng): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setZoom(zoomLevel: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setMapTypeId(mapTypeId: string): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setTilt(tiltLevel: number): void { }\r\n\r\n  /**\r\n   * @returns {Promise<any>}\r\n   */\r\n  @CordovaInstance()\r\n  animateCamera(animateCameraOptions: AnimateCameraOptions): Promise<any> { return; }\r\n\r\n  /**\r\n   * @returns {Promise<any>}\r\n   */\r\n  @CordovaInstance()\r\n  moveCamera(cameraPosition: CameraPosition): Promise<any> { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setMyLocationEnabled(enabled: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setIndoorEnabled(enabled: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setTrafficEnabled(enabled: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setCompassEnabled(enabled: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setAllGesturesEnabled(enabled: boolean): void { }\r\n\r\n  /**\r\n   * @returns {Promise<Marker | any>}\r\n   */\r\n  @InstanceCheck()\r\n  addMarker(options: MarkerOptions): Promise<Marker | any> {\r\n    return new Promise<Marker>((resolve, reject) => {\r\n        this._objectInstance.addMarker(options, (marker: any) => {\r\n          if (marker) {\r\n            resolve(new Marker(marker));\r\n          } else {\r\n            reject();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise<Circle | any>}\r\n   */\r\n  @InstanceCheck()\r\n  addCircle(options: CircleOptions): Promise<Circle | any> {\r\n    return new Promise<Circle>((resolve, reject) => {\r\n        this._objectInstance.addCircle(options, (circle: any) => {\r\n          if (circle) {\r\n            resolve(new Circle(circle));\r\n          } else {\r\n            reject();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise<Polygon | any>}\r\n   */\r\n  @InstanceCheck()\r\n  addPolygon(options: PolygonOptions): Promise<Polygon | any> {\r\n    return new Promise<Polygon>((resolve, reject) => {\r\n        this._objectInstance.addPolygon(options, (polygon: any) => {\r\n          if (polygon) {\r\n            resolve(new Polygon(polygon));\r\n          } else {\r\n            reject();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise<Polyline | any>}\r\n   */\r\n  @InstanceCheck()\r\n  addPolyline(options: PolylineOptions): Promise<Polyline | any> {\r\n    return new Promise<Polyline>((resolve, reject) => {\r\n        this._objectInstance.addPolyline(options, (polyline: any) => {\r\n          if (polyline) {\r\n            resolve(new Polyline(polyline));\r\n          } else {\r\n            reject();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise<TileOverlay | any>}\r\n   */\r\n  @InstanceCheck()\r\n  addTileOverlay(options: TileOverlayOptions): Promise<TileOverlay | any> {\r\n    return new Promise<TileOverlay>((resolve, reject) => {\r\n        this._objectInstance.addTileOverlay(options, (tileOverlay: any) => {\r\n          if (tileOverlay) {\r\n            resolve(new TileOverlay(tileOverlay));\r\n          } else {\r\n            reject();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise<GroundOverlay | any>}\r\n   */\r\n  @InstanceCheck()\r\n  addGroundOverlay(options: GroundOverlayOptions): Promise<GroundOverlay | any> {\r\n    return new Promise<GroundOverlay>((resolve, reject) => {\r\n        this._objectInstance.addGroundOverlay(options, (groundOverlay: any) => {\r\n          if (groundOverlay) {\r\n            resolve(new GroundOverlay(groundOverlay));\r\n          } else {\r\n            reject();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise<KmlOverlay | any>}\r\n   */\r\n  @InstanceCheck()\r\n  addKmlOverlay(options: KmlOverlayOptions): Promise<KmlOverlay | any> {\r\n    return new Promise<KmlOverlay>((resolve, reject) => {\r\n        this._objectInstance.addKmlOverlay(options, (kmlOverlay: any) => {\r\n          if (kmlOverlay) {\r\n            resolve(new KmlOverlay(kmlOverlay));\r\n          } else {\r\n            reject();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setDiv(domNode: HTMLElement): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setVisible(visible: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setOptions(options: any): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setBackgroundColor(backgroundColor: string): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setPadding(top?: number, right?: number, bottom?: number, left?: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  clear(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  refreshLayout(): void { }\r\n\r\n  /**\r\n   * @returns {Promise<any>}\r\n   */\r\n  @CordovaInstance()\r\n  fromLatLngToPoint(latLng: LatLng, point: any): Promise<any> { return; }\r\n\r\n  /**\r\n   * @returns {Promise<LatLng>}\r\n   */\r\n  @CordovaInstance()\r\n  fromPointToLatLng(point: any, latLng: LatLng): Promise<LatLng> { return; }\r\n\r\n  /**\r\n   * @returns {Promise<any>}\r\n   */\r\n  @CordovaInstance()\r\n  toDataURL(): Promise<any> { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  remove(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  panBy(): void { }\r\n}\r\n\r\n/**\r\n * @name Google Maps\r\n * @description This plugin uses the native Google Maps SDK\r\n * @usage\r\n * ```\r\n * import {\r\n *  GoogleMaps,\r\n *  GoogleMap,\r\n *  GoogleMapsEvent,\r\n *  LatLng,\r\n *  CameraPosition,\r\n *  MarkerOptions,\r\n *  Marker\r\n * } from '@ionic-native/google-maps';\r\n *\r\n * export class MapPage {\r\n *  constructor(private googleMaps: GoogleMaps) {}\r\n *\r\n * // Load map only after view is initialize\r\n * ngAfterViewInit() {\r\n *  this.loadMap();\r\n * }\r\n *\r\n * loadMap() {\r\n *  // make sure to create following structure in your view.html file\r\n *  // and add a height (for example 100%) to it, else the map won't be visible\r\n *  // <ion-content>\r\n *  //  <div #map id=\"map\" style=\"height:100%;\"></div>\r\n *  // </ion-content>\r\n *\r\n *  // create a new map by passing HTMLElement\r\n *  let element: HTMLElement = document.getElementById('map');\r\n *\r\n *  let map: GoogleMap = this.googleMaps.create(element);\r\n *\r\n *  // listen to MAP_READY event\r\n *  // You must wait for this event to fire before adding something to the map or modifying it in anyway\r\n *  map.one(GoogleMapsEvent.MAP_READY).then(() => console.log('Map is ready!'));\r\n *\r\n *  // create LatLng object\r\n *  let ionic: LatLng = new LatLng(43.0741904,-89.3809802);\r\n *\r\n *  // create CameraPosition\r\n *  let position: CameraPosition = {\r\n *    target: ionic,\r\n *    zoom: 18,\r\n *    tilt: 30\r\n *  };\r\n *\r\n *  // move the map's camera to position\r\n *  map.moveCamera(position);\r\n *\r\n *  // create new marker\r\n *  let markerOptions: MarkerOptions = {\r\n *    position: ionic,\r\n *    title: 'Ionic'\r\n *  };\r\n *\r\n *  const marker: Marker = map.addMarker(markerOptions)\r\n *    .then((marker: Marker) => {\r\n *       marker.showInfoWindow();\r\n *     });\r\n *  }\r\n *\r\n * }\r\n * ```\r\n * @classes\r\n * GoogleMap\r\n * Marker\r\n * LatLng\r\n * Geocoder\r\n * @interfaces\r\n * AnimateCameraOptions\r\n * MarkerOptions\r\n * MyLocation\r\n * MyLocationOptions\r\n * VisibleRegion\r\n *\r\n */\r\n@Plugin({\r\n  pluginName: 'GoogleMaps',\r\n  pluginRef: 'plugin.google.maps.Map',\r\n  plugin: 'cordova-plugin-googlemaps',\r\n  repo: 'https://github.com/mapsplugin/cordova-plugin-googlemaps',\r\n  install: 'ionic plugin add cordova-plugin-googlemaps --variable API_KEY_FOR_ANDROID=\"YOUR_ANDROID_API_KEY_IS_HERE\" --variable API_KEY_FOR_IOS=\"YOUR_IOS_API_KEY_IS_HERE\"',\r\n  installVariables: ['API_KEY_FOR_ANDROID', 'API_KEY_FOR_IOS']\r\n})\r\n\r\nexport class GoogleMaps {\r\n\r\n  /**\r\n   * Checks if a map object has been created and is available.\r\n   *\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  @Cordova()\r\n  isAvailable(): Promise<boolean> { return; }\r\n\r\n  /**\r\n   * Creates a new GoogleMap instance\r\n   * @param element {string | HTMLElement} Element ID or reference to attach the map to\r\n   * @param options {any} Options\r\n   * @returns {GoogleMap}\r\n   */\r\n  create(element: string | HTMLElement, options?: any): GoogleMap {\r\n    return new GoogleMap(element, options);\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface AnimateCameraOptions {\r\n  target?: LatLng | Array<Marker> | LatLngBounds;\r\n  tilt?: number;\r\n  zoom?: number;\r\n  bearing?: number;\r\n  duration?: number;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface CameraPosition {\r\n  target?: LatLng | LatLngBounds | LatLng[];\r\n  zoom?: number;\r\n  tilt?: number;\r\n  bearing?: number;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface MyLocation {\r\n  latLng?: LatLng;\r\n  speed?: number;\r\n  time?: string;\r\n  bearing?: number;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface MyLocationOptions {\r\n  enableHighAccuracy?: boolean;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface VisibleRegion {\r\n  northeast?: any;\r\n  southwest?: any;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface MarkerOptions {\r\n  /**\r\n   * The icon image url or properties. Also you can specify HTML Color values. Alternatively you can specify the image as Base64\r\n   */\r\n  icon?: any;\r\n\r\n  /**\r\n   * The content of the infoWindow.\r\n   */\r\n  title?: string;\r\n\r\n  /**\r\n   * The snippet of the infoWindow.\r\n   */\r\n  snippet?: string;\r\n\r\n  /**\r\n   * The position of the marker.\r\n   */\r\n  position?: LatLng;\r\n\r\n  /**\r\n   * \tSpecify the anchor of the InfoWindow\r\n   */\r\n  infoWindowAnchor?: number[];\r\n\r\n  /**\r\n   * Set true if you want to enable to drag the marker. (Default: false) Important! Drag starts after long pressed on the marker.\r\n   */\r\n  draggable?: boolean;\r\n\r\n  /**\r\n   * \tSet true if you want to use a flat marker. (Default: false)\r\n   */\r\n  flat?: boolean;\r\n\r\n  /**\r\n   * \tSet rotation angle. (Default: 0)\r\n   */\r\n  rotation?: number;\r\n\r\n  /**\r\n   * Set false if you want to hide. (Default: true)\r\n   */\r\n  visible?: boolean;\r\n\r\n  /**\r\n   * Specify the options for title.\r\n   */\r\n  styles?: any;\r\n\r\n  /**\r\n   * Which animation to play when marker is added to a map.\r\n   */\r\n  animation?: string;\r\n\r\n  /**\r\n   * \tiOS only, Plugin Version >= 1.3.3 Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays. (You're able to run this on Android, but it will have no effect)\r\n   */\r\n  zIndex?: number;\r\n\r\n  /**\r\n   * Set to true to disable auto panning when the marker is clicked.\r\n   */\r\n  disableAutoPan?: boolean;\r\n\r\n  /**\r\n   * Function to be invoked when the user clicks on the marker\r\n   */\r\n  markerClick?: Function;\r\n\r\n  /**\r\n   * Function to be invoked when the user clicks on the info box\r\n   */\r\n  infoClick?: Function;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface MarkerIcon {\r\n  url?: string;\r\n  size?: {\r\n    width?: number;\r\n    height?: number;\r\n  };\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class Marker {\r\n\r\n  constructor(private _objectInstance: any) { }\r\n\r\n  /**\r\n   * Adds an event listener.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  addEventListener(eventName: string): Observable<any> {\r\n    return Observable.fromEvent(this._objectInstance, eventName);\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener that works once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  addListenerOnce(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.addListenerOnce(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets a value\r\n   * @param key\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  get(key: string): any { return; }\r\n\r\n  /**\r\n   * Sets a value\r\n   * @param key\r\n   * @param value\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  set(key: string, value: any): void { }\r\n\r\n  /**\r\n   * Listen to a map event.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  on(eventName: string): Observable<any> {\r\n    if (!this._objectInstance) {\r\n      return new Observable((observer) => {\r\n        observer.error({ error: 'plugin_not_installed' });\r\n      });\r\n    }\r\n\r\n    return new Observable(\r\n      (observer) => {\r\n        this._objectInstance.on(eventName, observer.next.bind(observer));\r\n        return () => this._objectInstance.off(event);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listen to a map event only once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  one(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.one(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clears all stored values\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  empty(): void { }\r\n\r\n  /**\r\n   * Return true if the marker is visible\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  isVisible(): boolean { return; }\r\n\r\n  /**\r\n   * Set false if you want to hide the marker.\r\n   * @param visible\r\n   */\r\n  @CordovaInstance()\r\n  setVisible(visible: boolean): void { }\r\n\r\n  /**\r\n   * Return the marker hash code.\r\n   * @return {string} Marker hash code\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  getHashCode(): string { return; }\r\n\r\n  /**\r\n   * Remove the marker completely.\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  remove(): void { }\r\n\r\n  /**\r\n   * Change the marker opacity.\r\n   * @param alpha {number} Opacity\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setOpacity(alpha: number): void { }\r\n\r\n  /**\r\n   * Return the marker opacity.\r\n   * @return {number} Opacity\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  getOpacity(): number { return; }\r\n\r\n  /**\r\n   * iOS only, Plugin Version >= 1.3.3 Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays. (You're able to run this on Android, but it will have no effect)\r\n   * @return {number}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setZIndex(): number { return; }\r\n\r\n  /**\r\n   * Change the info window anchor. This defaults to 50% from the left of the image and at the bottom of the image.\r\n   * @param x {number}\r\n   * @param y {number}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setIconAnchor(x: number, y: number): void { }\r\n\r\n  /**\r\n   * Change the info window anchor. This defaults to 50% from the left of the image and at the top of the image.\r\n   * @param x {number}\r\n   * @param y {number}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setInfoWindowAnchor(x: number, y: number): void { }\r\n\r\n  /**\r\n   * \tSet true if you allows all users to drag the marker.\r\n   * @param draggable {boolean}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setDraggable(draggable: boolean): void { }\r\n\r\n  /**\r\n   * Return true if the marker drag is enabled.\r\n   * @return {boolean}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  isDraggable(): boolean { return; }\r\n\r\n  /**\r\n   * Set true if you want to be flat marker.\r\n   * @param flat {boolean}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setFlat(flat: boolean): void { return; }\r\n\r\n  /**\r\n   * Change icon url and/or size\r\n   * @param icon\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setIcon(icon: MarkerIcon): void { return; }\r\n\r\n  /**\r\n   * Change title of the infoWindow.\r\n   * @param title {string}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setTitle(title: string): void { }\r\n\r\n  /**\r\n   * Return the title strings.\r\n   * @return {string}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  getTitle(): string { return; }\r\n\r\n  /**\r\n   * Change snippet of the infoWindow.\r\n   * @param snippet {string}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setSnippet(snippet: string): void { }\r\n\r\n  /**\r\n   * Return the snippet strings.\r\n   * @return {string}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  getSnippet(): string { return; }\r\n\r\n  /**\r\n   * Set the marker rotation angle.\r\n   * @param rotation {number}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setRotation(rotation: number): void { }\r\n\r\n  /**\r\n   * Return the marker rotation angle.\r\n   * @return {number}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  getRotation(): number { return; }\r\n\r\n  /**\r\n   * Show the infoWindow of the marker.\r\n   * @return {number}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  showInfoWindow(): number { return; }\r\n\r\n  /**\r\n   * Hide the infoWindow of the marker.\r\n   * @return {number}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  hideInfoWindow(): number { return; }\r\n\r\n  /**\r\n   * Set the marker position.\r\n   * @param latLng {GoogleMapLatLng}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setPosition(latLng: LatLng): void { return; }\r\n\r\n  /**\r\n   * Return the marker position.\r\n   * @return {Promise<GoogleMapLatLng>}\r\n   */\r\n  @CordovaInstance()\r\n  getPosition(): Promise<LatLng> { return; }\r\n\r\n  /**\r\n   * Return the map instance.\r\n   * @return {GoogleMap}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  getMap(): GoogleMap { return; }\r\n\r\n  /**\r\n   * Specify the animation either `DROP` or `BOUNCE`\r\n   * @param animation {string}\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  setAnimation(animation: string): void { }\r\n\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface CircleOptions {\r\n  center?: LatLng;\r\n  radius?: number;\r\n  strokeColor?: string;\r\n  strokeWidth?: number;\r\n  fillColor?: string;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\n\r\nexport class Circle {\r\n\r\n  constructor(private _objectInstance: any) { }\r\n\r\n  /**\r\n   * Adds an event listener.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  addEventListener(eventName: string): Observable<any> {\r\n    return Observable.fromEvent(this._objectInstance, eventName);\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener that works once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  addListenerOnce(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.addListenerOnce(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets a value\r\n   * @param key\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  get(key: string): any { return; }\r\n\r\n  /**\r\n   * Sets a value\r\n   * @param key\r\n   * @param value\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  set(key: string, value: any): void { }\r\n\r\n  /**\r\n   * Listen to a map event.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  on(eventName: string): Observable<any> {\r\n    if (!this._objectInstance) {\r\n      return new Observable((observer) => {\r\n        observer.error({ error: 'plugin_not_installed' });\r\n      });\r\n    }\r\n\r\n    return new Observable(\r\n      (observer) => {\r\n        this._objectInstance.on(eventName, observer.next.bind(observer));\r\n        return () => this._objectInstance.off(event);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listen to a map event only once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  one(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.one(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clears all stored values\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  empty(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getCenter(): LatLng { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getRadius(): number { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getStrokeColor(): string { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getVisible(): boolean { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getZIndex(): number { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  remove(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setCenter(latLng: LatLng): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setFillColor(fillColor: string): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setStrokeColor(strokeColor: string): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setStrokeWidth(strokeWidth: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setVisible(visible: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setZIndex(zIndex: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setRadius(radius: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getMap(): GoogleMap { return; }\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface PolylineOptions {\r\n  points?: Array<LatLng>;\r\n  visible?: boolean;\r\n  geodesic?: boolean;\r\n  color?: string;\r\n  width?: number;\r\n  zIndex?: number;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\n\r\nexport class Polyline {\r\n  constructor(private _objectInstance: any) { }\r\n\r\n  /**\r\n   * Adds an event listener.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  addEventListener(eventName: string): Observable<any> {\r\n    return Observable.fromEvent(this._objectInstance, eventName);\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener that works once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  addListenerOnce(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.addListenerOnce(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets a value\r\n   * @param key\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  get(key: string): any { return; }\r\n\r\n  /**\r\n   * Sets a value\r\n   * @param key\r\n   * @param value\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  set(key: string, value: any): void { }\r\n\r\n  /**\r\n   * Listen to a map event.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  on(eventName: string): Observable<any> {\r\n    if (!this._objectInstance) {\r\n      return new Observable((observer) => {\r\n        observer.error({ error: 'plugin_not_installed' });\r\n      });\r\n    }\r\n\r\n    return new Observable(\r\n      (observer) => {\r\n        this._objectInstance.on(eventName, observer.next.bind(observer));\r\n        return () => this._objectInstance.off(event);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listen to a map event only once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  one(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.one(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clears all stored values\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  empty(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getPoints(): Array<LatLng> { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getCOlor(): string { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getWidth(): number { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getGeodesic(): boolean { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getZIndex(): number { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  remove(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setPoints(points: Array<LatLng>): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setColor(color: string): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setWidth(width: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setVisible(visible: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setZIndex(zIndex: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setGeoDesic(geoDesic: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getMap(): GoogleMap { return; }\r\n\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface PolygonOptions {\r\n  points?: Array<LatLng>;\r\n  geodesic?: boolean;\r\n  strokeColor?: string;\r\n  strokeWidth?: number;\r\n  fillColor?: string;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n  addHole?: Array<LatLng>;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\n\r\nexport class Polygon {\r\n\r\n  constructor(private _objectInstance: any) { }\r\n\r\n  /**\r\n   * Adds an event listener.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  addEventListener(eventName: string): Observable<any> {\r\n    return Observable.fromEvent(this._objectInstance, eventName);\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener that works once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  addListenerOnce(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.addListenerOnce(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets a value\r\n   * @param key\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  get(key: string): any { return; }\r\n\r\n  /**\r\n   * Sets a value\r\n   * @param key\r\n   * @param value\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  set(key: string, value: any): void { }\r\n\r\n  /**\r\n   * Listen to a map event.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  on(eventName: string): Observable<any> {\r\n    if (!this._objectInstance) {\r\n      return new Observable((observer) => {\r\n        observer.error({ error: 'plugin_not_installed' });\r\n      });\r\n    }\r\n\r\n    return new Observable(\r\n      (observer) => {\r\n        this._objectInstance.on(eventName, observer.next.bind(observer));\r\n        return () => this._objectInstance.off(event);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listen to a map event only once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  one(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.one(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clears all stored values\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  empty(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getPoints(): Array<LatLng> { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getStrokeColor(): string { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getFillColor(): string { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getStrokeWidth(): number { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getGeodesic(): boolean { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getVisible(): boolean { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getZIndex(): boolean { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  remove(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setPoints(points: Array<LatLng>): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setStrokeColor(strokeColor: string): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setFillColor(fillColor: string): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setStrokeWidth(strokeWidth: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setVisible(visible: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setZIndex(zIndex: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setGeodesic(geodesic: boolean): void { }\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface TileOverlayOptions {\r\n  tileUrlFormat?: string;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n  tileSize?: number;\r\n  opacity?: number;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class TileOverlay {\r\n\r\n  constructor(private _objectInstance: any) { }\r\n\r\n  /**\r\n   * Adds an event listener.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  addEventListener(eventName: string): Observable<any> {\r\n    return Observable.fromEvent(this._objectInstance, eventName);\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener that works once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  addListenerOnce(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.addListenerOnce(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets a value\r\n   * @param key\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  get(key: string): any { return; }\r\n\r\n  /**\r\n   * Sets a value\r\n   * @param key\r\n   * @param value\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  set(key: string, value: any): void { }\r\n\r\n  /**\r\n   * Listen to a map event.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  on(eventName: string): Observable<any> {\r\n    if (!this._objectInstance) {\r\n      return new Observable((observer) => {\r\n        observer.error({ error: 'plugin_not_installed' });\r\n      });\r\n    }\r\n\r\n    return new Observable(\r\n      (observer) => {\r\n        this._objectInstance.on(eventName, observer.next.bind(observer));\r\n        return () => this._objectInstance.off(event);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listen to a map event only once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  one(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.one(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clears all stored values\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  empty(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getVisible(): boolean { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setVisible(visible: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getFadeIn(): boolean { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setFadeIn(fadeIn: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getZIndex(): number { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setZIndex(zIndex: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getOpacity(): number { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setOpacity(opacity: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  clearTileCache(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  remove(): void { }\r\n\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface GroundOverlayOptions {\r\n  url?: string;\r\n  bounds?: Array<LatLng>;\r\n  visible?: boolean;\r\n  opacity?: number;\r\n  bearing?: number;\r\n  zIndex?: number;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class GroundOverlay {\r\n\r\n  constructor(private _objectInstance: any) { }\r\n\r\n  /**\r\n   * Adds an event listener.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  addEventListener(eventName: string): Observable<any> {\r\n    return Observable.fromEvent(this._objectInstance, eventName);\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener that works once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  addListenerOnce(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.addListenerOnce(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets a value\r\n   * @param key\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  get(key: string): any { return; }\r\n\r\n  /**\r\n   * Sets a value\r\n   * @param key\r\n   * @param value\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  set(key: string, value: any): void { }\r\n\r\n  /**\r\n   * Listen to a map event.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  on(eventName: string): Observable<any> {\r\n    if (!this._objectInstance) {\r\n      return new Observable((observer) => {\r\n        observer.error({ error: 'plugin_not_installed' });\r\n      });\r\n    }\r\n\r\n    return new Observable(\r\n      (observer) => {\r\n        this._objectInstance.on(eventName, observer.next.bind(observer));\r\n        return () => this._objectInstance.off(event);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listen to a map event only once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  one(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.one(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clears all stored values\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  empty(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setBearing(bearing: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getBearing(): number { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setOpacity(opacity: number): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getOpacity(): number { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setVisible(visible: boolean): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getVisible(): boolean { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  setImage(image: string): void { };\r\n\r\n  @CordovaInstance({ sync: true })\r\n  remove(): void { }\r\n\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport interface KmlOverlayOptions {\r\n  url?: string;\r\n  preserveViewport?: boolean;\r\n  animation?: boolean;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class KmlOverlay {\r\n\r\n  constructor(private _objectInstance: any) { }\r\n\r\n  /**\r\n   * Adds an event listener.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  addEventListener(eventName: string): Observable<any> {\r\n    return Observable.fromEvent(this._objectInstance, eventName);\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener that works once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  addListenerOnce(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.addListenerOnce(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets a value\r\n   * @param key\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  get(key: string): any { return; }\r\n\r\n  /**\r\n   * Sets a value\r\n   * @param key\r\n   * @param value\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  set(key: string, value: any): void { }\r\n\r\n  /**\r\n   * Listen to a map event.\r\n   *\r\n   * @returns {Observable<any>}\r\n   */\r\n  on(eventName: string): Observable<any> {\r\n    if (!this._objectInstance) {\r\n      return new Observable((observer) => {\r\n        observer.error({ error: 'plugin_not_installed' });\r\n      });\r\n    }\r\n\r\n    return new Observable(\r\n      (observer) => {\r\n        this._objectInstance.on(eventName, observer.next.bind(observer));\r\n        return () => this._objectInstance.off(event);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listen to a map event only once.\r\n   *\r\n   * @returns {Promise<any>}\r\n   */\r\n  one(eventName: string): Promise<any> {\r\n    if (!this._objectInstance) {\r\n      return Promise.reject({ error: 'plugin_not_installed' });\r\n    }\r\n    return new Promise<any>(\r\n      resolve => this._objectInstance.one(eventName, resolve)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clears all stored values\r\n   */\r\n  @CordovaInstance({ sync: true })\r\n  empty(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  remove(): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getOverlays(): Array<Polyline | Polygon | Marker> { return; }\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class LatLngBounds {\r\n  private _objectInstance: any;\r\n\r\n  @InstanceProperty northeast: LatLng;\r\n  @InstanceProperty southwest: LatLng;\r\n  @InstanceProperty type: string;\r\n\r\n  constructor(southwestOrArrayOfLatLng: LatLng | LatLng[], northeast?: LatLng) {\r\n    let args = !!northeast ? [southwestOrArrayOfLatLng, northeast] : southwestOrArrayOfLatLng;\r\n    this._objectInstance = new plugin.google.maps.LatLngBounds(args);\r\n  }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  toString(): string { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  toUrlValue(precision?: number): string { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  extend(LatLng: LatLng): void { }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  contains(LatLng: LatLng): boolean { return; }\r\n\r\n  @CordovaInstance({ sync: true })\r\n  getCenter(): LatLng { return; }\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\n\r\nexport class LatLng {\r\n\r\n  lat: number;\r\n  lng: number;\r\n\r\n  constructor(lat: number, lng: number) {\r\n    this.lat = lat;\r\n    this.lng = lng;\r\n  }\r\n\r\n  equals(other: LatLng): boolean {\r\n    return this.lat === other.lat && this.lng === other.lng;\r\n  }\r\n\r\n  toString(): string {\r\n    return this.lat + ',' + this.lng;\r\n  }\r\n\r\n  toUrlValue(precision?: number): string {\r\n    precision = precision || 6;\r\n\r\n    return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);\r\n  }\r\n}\r\n/**\r\n * @hidden\r\n */\r\nexport interface GeocoderRequest {\r\n  address?: string;\r\n  bounds?: LatLng[];\r\n  position?: { lat: number; lng: number };\r\n}\r\n/**\r\n * @hidden\r\n */\r\nexport interface GeocoderResult {\r\n  adminArea?: string;\r\n  country?: string;\r\n  countryCode?: string;\r\n  extra?: {\r\n    featureName?: string;\r\n    lines?: Array<string>;\r\n    permises?: string;\r\n    phone?: string;\r\n    url?: string\r\n  };\r\n  locale?: string;\r\n  locality?: string;\r\n  position?: { lat: number; lng: number };\r\n  postalCode?: string;\r\n  subAdminArea?: string;\r\n  subLocality?: string;\r\n  subThoroughfare?: string;\r\n  thoroughfare?: string;\r\n}\r\n/**\r\n * @hidden\r\n */\r\n@Plugin({\r\n  pluginName: 'Geocoder',\r\n  pluginRef: 'plugins.google.maps.Geocoder',\r\n  plugin: 'cordova-plugin-googlemaps',\r\n  repo: ''\r\n})\r\nexport class Geocoder {\r\n  /**\r\n   * Converts position to address and vice versa\r\n   * @param {GeocoderRequest} request Request object with either an address or a position\r\n   * @returns {Promise<GeocoderResult[]>}\r\n   */\r\n  @CordovaCheck()\r\n  geocode(request: GeocoderRequest): Promise<GeocoderResult[] | any> {\r\n    return new Promise<GeocoderResult[]>(resolve => {\r\n      plugin.google.maps.Geocoder.geocode(request, resolve);\r\n    });\r\n  }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}